

BEGIN
  APEX_UTIL.PAUSE(5); 
  dbms_output.PUT_LINE('Hola');
END;

/* Esto es un error */
BEGIN
  CREATE TABLE ALGO(DATO VARCHAR2(100));
END;


CREATE OR REPLACE PROCEDURE sp_execute
( p_cmd VARCHAR2 )
AS
BEGIN
  EXECUTE IMMEDIATE p_cmd;
END;
 

/* Se debe asignar el privilegio CREATE TABLE al usuario */

GRANT CREATE TABLE TO eureka;

REVOKE CREATE TABLE FROM eureka;

call EUREKA.sp_execute('CREATE TABLE EUREKA.ALGO(DATO VARCHAR2(100))');


-- DATABASE LINK

CREATE PUBLIC DATABASE LINK LNK_REMOTO
CONNECT TO SYSTEM IDENTIFIED BY oracle
USING 'DB_REMOTA';

CREATE PUBLIC DATABASE LINK LNK_REMOTO2
CONNECT TO SYSTEM IDENTIFIED BY oracle
USING '(DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 172.17.2.182)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl)
    )
  )';


SELECT * FROM CUENTA;

SELECT * FROM SCOTT.EMP@LNK_REMOTO;


-- SINONIMO



CREATE OR REPLACE PUBLIC SYNONYM cuenta
FOR eureka.CUENTA;

create user panchito identified by operador;

grant create session to panchito;

grant select on eureka.cuenta to panchito;






  
SELECT * FROM SCOTT.EMP;

SELECT * FROM SCOTT.DEPT@LNK_REMOTO2;




-- CURSORES

DECLARE
  CURSOR CUR_EMP IS SELECT EMPNO, ENAME FROM SCOTT.EMP;
  V_EMPNO SCOTT.EMP.EMPNO%TYPE;
  V_ENAME SCOTT.EMP.ENAME%TYPE;
BEGIN
  OPEN CUR_EMP;
  
  FETCH CUR_EMP INTO V_EMPNO, V_ENAME;
  DBMS_OUTPUT.PUT_LINE('EMPNO: ' || V_EMPNO);
  DBMS_OUTPUT.PUT_LINE('ENAME: ' || V_ENAME);
  
  FETCH CUR_EMP INTO V_EMPNO, V_ENAME;
  DBMS_OUTPUT.PUT_LINE('EMPNO: ' || V_EMPNO);
  DBMS_OUTPUT.PUT_LINE('ENAME: ' || V_ENAME);
  
  CLOSE CUR_EMP;
END;




DECLARE
  CURSOR CUR_EMP( P_DEPTNO NUMBER) IS 
    SELECT EMPNO, ENAME FROM SCOTT.EMP
    WHERE DEPTNO = P_DEPTNO;
  V_EMPNO SCOTT.EMP.EMPNO%TYPE;
  V_ENAME SCOTT.EMP.ENAME%TYPE;
BEGIN
  OPEN CUR_EMP( 30 );
  
  FETCH CUR_EMP INTO V_EMPNO, V_ENAME;
  DBMS_OUTPUT.PUT_LINE('EMPNO: ' || V_EMPNO);
  DBMS_OUTPUT.PUT_LINE('ENAME: ' || V_ENAME);
  DBMS_OUTPUT.PUT_LINE('ROWCOUNT: ' || CUR_EMP%ROWCOUNT);
  
  FETCH CUR_EMP INTO V_EMPNO, V_ENAME;
  DBMS_OUTPUT.PUT_LINE('EMPNO: ' || V_EMPNO);
  DBMS_OUTPUT.PUT_LINE('ENAME: ' || V_ENAME);
  DBMS_OUTPUT.PUT_LINE('ROWCOUNT: ' || CUR_EMP%ROWCOUNT);
  
  CLOSE CUR_EMP;
END;


DECLARE
  CURSOR CUR_EMP( P_DEPTNO NUMBER) IS 
    SELECT EMPNO, ENAME FROM SCOTT.EMP
    WHERE DEPTNO = P_DEPTNO;
  V_EMPNO SCOTT.EMP.EMPNO%TYPE;
  V_ENAME SCOTT.EMP.ENAME%TYPE;
BEGIN
  OPEN CUR_EMP( 30 );
  LOOP
  
    FETCH CUR_EMP INTO V_EMPNO, V_ENAME;
    EXIT WHEN CUR_EMP%NOTFOUND;
    
    DBMS_OUTPUT.PUT_LINE(V_EMPNO || ', ' || V_ENAME);

  END LOOP;
  CLOSE CUR_EMP;
END;



DECLARE
  CURSOR CUR_EMP( P_DEPTNO NUMBER) IS 
    SELECT EMPNO, ENAME FROM SCOTT.EMP
    WHERE DEPTNO = P_DEPTNO;
BEGIN
  FOR REC IN CUR_EMP( 20 ) LOOP   
    DBMS_OUTPUT.PUT_LINE(REC.EMPNO || ', ' || REC.ENAME);
  END LOOP;
END;



BEGIN
  FOR REC IN ( SELECT EMPNO, ENAME FROM SCOTT.EMP
               WHERE DEPTNO = 10 ) LOOP   
    DBMS_OUTPUT.PUT_LINE(REC.EMPNO || ', ' || REC.ENAME);
  END LOOP;
END;


-- PROCEDIMIENTO RETORNA UN CURSOR

CREATE OR REPLACE PROCEDURE SCOTT.SP_GET_EMPS
( P_DEPTNO IN NUMBER, P_CURSOR OUT SYS_REFCURSOR )
IS
BEGIN
  OPEN P_CURSOR FOR 
  SELECT * FROM SCOTT.EMP WHERE DEPTNO = P_DEPTNO;
END;

DECLARE
  V_CURSOR SYS_REFCURSOR;
  V_REC    SCOTT.EMP%ROWTYPE;
BEGIN
  SCOTT.SP_GET_EMPS( 30, V_CURSOR );
  LOOP
    FETCH V_CURSOR INTO V_REC;
    EXIT WHEN V_CURSOR%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(V_REC.EMPNO || ', ' || V_REC.ENAME);
  END LOOP;
  CLOSE V_CURSOR;
END;


BEGIN
  SCOTT.SP_GET_EMPS (20, :p_cursor$REFCURSOR);
END;


SELECT * FROM scott.emp
WHERE lower(ename) LIKE '%c%';

/*
EJERCICI O2
Desarrollar una procediento que retorne un 
cursor con información de las cuentas 
de un cliente.
Esquema: EUREKA
*/

/*
Ejercicio 03
Desarrollar una función que retorne los movimentos
de una cuenta.
Esquema: EUREKA
*/


/*
Ejercicio 04
Desarrollar un procedimiento que retorne un cursor
con la siguiente información por departamento:
- Cant. de empleados
- Importe de la planilla
*/







